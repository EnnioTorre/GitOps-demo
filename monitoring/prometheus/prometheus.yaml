apiVersion: v1
kind: Template
labels:
  template: prometheus
  group: demobackery
metadata:
  name: prometheus
  description: "Template containing prometheus artifacts."
parameters:
- displayName: project name
  value: dev-backerydemo
  name: PROJECT
  required: true
- displayName: Application name
  description: Name of the application
  name: APP_NAME
  required: true
  value: backerydemo
objects:
- apiVersion: monitoring.coreos.com/v1
  kind: Prometheus
  metadata:
    name: prometheus-instance
    namespace: ${PROJECT}
    labels:
      name: prometheus-instance
      app: prometheus-app
      project:  ${PROJECT}
  spec:
    replicas: 2
    serviceAccountName: prometheus-sa
    securityContext: {}
    serviceMonitorSelector: 
      matchLabels:
        name: prometheus-service-monitor
      ruleSelector: {}
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    name: prometheus-service-monitor
    namespace:  ${PROJECT}
    labels:
      name: prometheus-service-monitor
      app: prometheus-app
      project:  ${PROJECT}
  spec:
    namespaceSelector:
      matchNames:
        -  ${PROJECT}
    selector:
      matchLabels:
        app:  ${APP_NAME}
    endpoints:
      - port: http-port
        path: /actuator/prometheus
        interval: 30s
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: prometheus-sa
          namespace:  ${PROJECT}
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    name: prometheus-cl
  rules:
  - apiGroups: [""]
    resources:
    - nodes
    - services
    - endpoints
    - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
    - configmaps
    verbs: ["get"]
  - nonResourceURLs: ["/actuator/metrics"]
    verbs: ["get"]
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    name: prometheus-clb
    namespace:  ${PROJECT}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: prometheus-cl
  subjects:
  - kind: ServiceAccount
    name: prometheus-sa
    namespace:  ${PROJECT}
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: prometheus-route
    namespace:  ${PROJECT}
    labels:
      name: prometheus-route
      app: prometheus-app
      project:  ${PROJECT}
      operated-prometheus: "true"
  spec:
    path: /
    to:
      kind: Service
      name: prometheus-operated
      weight: 100
    port:
      targetPort: web
    wildcardPolicy: None