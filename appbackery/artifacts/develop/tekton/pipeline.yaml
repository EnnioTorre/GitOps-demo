---
# https://developer.ibm.com/components/tekton/blogs/goodbye-tekton-condition-crd/
# tested with tekton pipelines<0.16!
apiVersion: tekton.dev/v1alpha1
kind: Condition
metadata:
  name: check-if-dev
spec:
  params:
    - name: "env"
  check:
    image: alpine
    script: |
      if [ $(params.env) != "dev" ]; then
        exit 1
      fi
      exit 0
---
apiVersion: tekton.dev/v1alpha1
kind: Condition
metadata:
  name: check-if-not-dev
spec:
  params:
    - name: "env"
  check:
    image: alpine
    script: |
      if [ $(params.env) == "dev" ]; then
        exit 1
      fi
      exit 0
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-deploy
spec:
  resources:
  - name: app-git
    type: git
  params:
  - name: APP_NAME
    type: string
    description: name of the deployment to be patched
  - name: GIT_CONTEXT_DIR_KUBERNETES
    type: string
    description: Kubernetes Objects path
    default: src
  - name: GIT_CONTEXT_DIR_DOCKER
    type: string
    description: Docker Image path
  - name: WAR_CONTEXT
    type: string
    description: War file location
  - name: MVN_IMAGE
    type: string
    description: image to be build from the code
    default: 'maven:3.6.3-jdk-8'
  - name: K8_MANIFESTS_REPO
    type: string
    description: repo name of the kubernetes manifests for deployment
    default: "EnnioTorre/GitOps-demo"
  - name: K8_MANIFESTS_REVISION
    type: string
    description: revision to be used from repo of the kubernetes manifests for deployment
    default: "master"
  - name: BUILDER_IMAGE
    description: buildah builder image.
    default: quay.io/buildah/stable:v1.14.3
  - name: IMAGE_URL
    description: The location of the buildah builder image.
  - name: IMAGE_TAG
    description: The applicaton image tag.
    default: latest
  - name: PROJECT_NAME
    description: The project name.
  tasks:
  - name: junit-test
    taskRef:
      name: maven-task
      kind: Task
    params:
    - name: APP_NAME
      value: $(params.APP_NAME)
    - name: GOALS
      value:
        - com.github.eirslett:frontend-maven-plugin:1.7.6:install-node-and-npm
        - -DnodeVersion="v12.14.0
        - test
        - -Pproduction
    - name: GIT_CONTEXT_DIR_DOCKER
      value: $(params.GIT_CONTEXT_DIR_DOCKER)
    - name: WAR_CONTEXT
      value: $(params.WAR_CONTEXT)
    - name: MVN_IMAGE
      value: $(params.MVN_IMAGE)
    resources:
      inputs:
      - name: source
        resource: app-git
  - name: build-image
    taskRef:
      name: build-image-task
      kind: Task
    params:
    - name: APP_NAME
      value: $(params.APP_NAME)
    - name: GOALS
      value:
        - com.github.eirslett:frontend-maven-plugin:1.7.6:install-node-and-npm
        - -DnodeVersion="v12.14.0
        - clean
        - package
        - -Pproduction
        - -DskipTests=true
    - name: GIT_CONTEXT_DIR_DOCKER
      value: $(params.GIT_CONTEXT_DIR_DOCKER)
    - name: WAR_CONTEXT
      value: $(params.WAR_CONTEXT)
    - name: BUILDER_IMAGE
      value: $(params.BUILDER_IMAGE)
    - name: IMAGE_URL
      value: $(params.IMAGE_URL)
    - name: IMAGE_TAG
      value: $(params.IMAGE_TAG)
    - name: MVN_IMAGE
      value: $(params.MVN_IMAGE)
    resources:
      inputs:
      - name: source
        resource: app-git
  - name: deploy-image-to-dev
    taskRef:
      name: deploy-task
      kind: Task
    conditions:
      - conditionRef: check-if-dev
        params:
          - name: env
            value: $(params.K8_MANIFESTS_REVISION)
    # cannot be used with the tekton version provided by Opesnhift 4.5.X
    # admission webhook "webhook.pipeline.tekton.dev" denied the request: mutation failed: cannot decode incoming new object: json: unknown field "when"
    # Tekton Pipeline v0.16 includes When Expressions: https://developer.ibm.com/components/tekton/blogs/goodbye-tekton-condition-crd
    # when:
    #   - input: "$(params.K8_MANIFESTS_REVISION)"
    #     operator: in
    #     values: [ "prod" ]
    params:
    - name: IMAGE_URL
      value: $(params.IMAGE_URL)
    - name: IMAGE_TAG
      value: $(tasks.build-image.results.commit)
    - name: DEPLOYMENT
      value: $(params.APP_NAME)
    - name: PROJECT_NAME
      value: $(params.PROJECT_NAME)
    runAfter:
    - build-image
    - junit-test
  - name: update-dev-image
    taskRef:
      name: image-updater
    runAfter:
      - deploy-image-to-dev
    params:
      - name: driver
        value: "github"
      - name: file-path
        value: "appbackery/artifacts/$(params.K8_MANIFESTS_REVISION)/helm/values.yaml"
      - name: image-repo
        value: "$(params.IMAGE_URL)"
      - name: new-image-url
        value: "$(tasks.build-image.results.commit)"
      - name: source-branch
        value: "$(params.K8_MANIFESTS_REVISION)"
      - name: source-repo
        value: "$(params.K8_MANIFESTS_REPO)"
      - name: update-key
        value: "image_tag"
      - name: insecure
        value: "true"
      - name: branch-generate-name
        value: ""
  - name: promote-dev-image
    taskRef:
      name: image-updater
    conditions:
      - conditionRef: check-if-not-dev
        params:
          - name: env
            value: $(params.K8_MANIFESTS_REVISION)
    runAfter:
      - build-image
      - junit-test
    params:
      - name: driver
        value: "github"
      - name: file-path
        value: "appbackery/artifacts/$(params.K8_MANIFESTS_REVISION)/helm/values.yaml"
      - name: image-repo
        value: "$(params.IMAGE_URL)"
      - name: new-image-url
        value: "$(tasks.build-image.results.commit)"
      - name: source-branch
        value: "$(params.K8_MANIFESTS_REVISION)"
      - name: source-repo
        value: "$(params.K8_MANIFESTS_REPO)"
      - name: update-key
        value: "image_tag"
      - name: insecure
        value: "true"
      - name: branch-generate-name
        value: "promote-"